package com.example.chuyendedidong2;import androidx.activity.result.ActivityResultCallback;import androidx.activity.result.ActivityResultLauncher;import androidx.activity.result.contract.ActivityResultContracts;import androidx.annotation.NonNull;import androidx.annotation.Nullable;import androidx.appcompat.app.AppCompatActivity;import android.Manifest;import android.content.ContentResolver;import android.content.Intent;import android.content.pm.PackageManager;import android.graphics.Bitmap;import android.graphics.BitmapFactory;import android.net.Uri;import android.os.Build;import android.os.Bundle;import android.text.TextUtils;import android.util.Log;import android.view.View;import android.webkit.MimeTypeMap;import android.widget.AdapterView;import android.widget.ArrayAdapter;import android.widget.Button;import android.widget.EditText;import android.widget.ImageView;import android.widget.Spinner;import android.widget.Toast;import com.example.chuyendedidong2.Model.ProductModel;import com.example.chuyendedidong2.Model.Shop;import com.google.android.gms.tasks.OnCompleteListener;import com.google.android.gms.tasks.OnFailureListener;import com.google.android.gms.tasks.OnSuccessListener;import com.google.android.gms.tasks.Task;import com.google.firebase.auth.FirebaseAuth;import com.google.firebase.database.DataSnapshot;import com.google.firebase.database.DatabaseError;import com.google.firebase.database.DatabaseReference;import com.google.firebase.database.FirebaseDatabase;import com.google.firebase.database.ValueEventListener;import com.google.firebase.storage.FileDownloadTask;import com.google.firebase.storage.FirebaseStorage;import com.google.firebase.storage.OnProgressListener;import com.google.firebase.storage.StorageReference;import com.google.firebase.storage.UploadTask;import java.io.File;import java.io.IOException;import java.lang.reflect.Array;import java.util.UUID;import de.hdodenhof.circleimageview.CircleImageView;public class ActivityQuanLySanPham extends AppCompatActivity {    ImageView ivHinh;    ImageView ivPic1;    ImageView ivPic2;    ImageView ivPic3;    EditText edtTen, edtGia, edtDes;    Button btnThem;    DiaLogLoanding diaLogLoanding;    FirebaseDatabase database;    FirebaseAuth auth;    FirebaseStorage storage;    Uri imageHinh, pic1, pic2, pic3;    Bitmap hinh;    DialogOkActivity dialogOk;    Spinner spiner;    String TV;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_quan_ly_san_pham);        diaLogLoanding = new DiaLogLoanding(this);        database = FirebaseDatabase.getInstance();        auth = FirebaseAuth.getInstance();        storage = FirebaseStorage.getInstance();        dialogOk = new DialogOkActivity(this);        setControl();        setEvent();    }    private void setEvent() {        ivHinh.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                openGalley();            }        });        ivPic1.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                openGalleyPic1();            }        });        ivPic2.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                openGalleyPic2();            }        });        ivPic3.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                openGalleyPic3();            }        });        btnThem.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                themSanPham(view);            }        });        String[] spin = {"điện thoại", "laptop", "máy tính", "tivi" , "tủ lạnh" , "máy giặt"  , "điều hòa" };        ArrayAdapter arrayAdapter = new ArrayAdapter(this, androidx.appcompat.R.layout.support_simple_spinner_dropdown_item, spin);        arrayAdapter.setDropDownViewResource(androidx.appcompat.R.layout.support_simple_spinner_dropdown_item);        spiner.setAdapter(arrayAdapter);        spiner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {            @Override            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {                if(i == 0){                    TV = "điện thoại";                }                else if(i ==1){                    TV = "laptop";                }                else if (i == 2){                    TV = "máy tính";                }                else if(i ==3){                    TV = "tivi";                }else if(i ==4){                    TV = "tủ lạnh";                }else if(i ==5){                    TV = "máy giặt";                }else if(i ==6){                    TV = "điều hòa";                }            }            @Override            public void onNothingSelected(AdapterView<?> adapterView) {            }        });    }    private void openGalley() {        Intent intent = new Intent();        intent.setType("image/*");        intent.setAction(Intent.ACTION_GET_CONTENT);        startActivityForResult(intent, 100);    }    private void openGalleyPic1() {        Intent intent = new Intent();        intent.setType("image/*");        intent.setAction(Intent.ACTION_GET_CONTENT);        startActivityForResult(intent, 101);    }    private void openGalleyPic2() {        Intent intent = new Intent();        intent.setType("image/*");        intent.setAction(Intent.ACTION_GET_CONTENT);        startActivityForResult(intent, 102);    }    private void openGalleyPic3() {        Intent intent = new Intent();        intent.setType("image/*");        intent.setAction(Intent.ACTION_GET_CONTENT);        startActivityForResult(intent, 103);    }    @Override    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {        super.onActivityResult(requestCode, resultCode, data);        if (requestCode == 100 && resultCode == RESULT_OK && data != null) {            imageHinh = data.getData();            ivHinh.setImageURI(imageHinh);        } else if (requestCode == 101 && resultCode == RESULT_OK && data != null) {            pic1 = data.getData();            ivPic1.setImageURI(pic1);        } else if (requestCode == 102 && resultCode == RESULT_OK && data != null) {            pic2 = data.getData();            ivPic2.setImageURI(pic2);        } else if (requestCode == 103 && resultCode == RESULT_OK && data != null) {            pic3 = data.getData();            ivPic3.setImageURI(pic3);        }    }    private void themSanPham(View view) {        String ten = TV + " " +  edtTen.getText().toString();        String gia = edtGia.getText().toString();        String des = edtDes.getText().toString();        diaLogLoanding.ShowDiaLog("Đang thêm sản phẩm...");        if (TextUtils.isEmpty(ten)) {            diaLogLoanding.HideDialog();            edtTen.setError("Nhập tên sản phẩm!");            return;        } else if (TextUtils.isEmpty(gia)) {            diaLogLoanding.HideDialog();            edtGia.setError("Nhập giá sản phẩm!");            return;        } else if (TextUtils.isEmpty(des)) {            diaLogLoanding.HideDialog();            edtDes.setError("Nhập chi tiết sản phẩm!");            return;        }        if (imageHinh == null) {            dialogOk.ShowDiaLog("Vui lòng chọn hình!");            return;        }        DatabaseReference root = database.getReference("product_register");        String productId = root.push().getKey();        StorageReference storageReference = FirebaseStorage.getInstance().getReference("images/" + auth.getUid() + "/" + productId  +"/" + "hinh" + "." + getFileExtension(imageHinh));        StorageReference storageReferencePic1 = FirebaseStorage.getInstance().getReference("images/" + auth.getUid() + "/"+ productId + "/"+ "pic1" + "." + getFileExtension(pic1));        StorageReference storageReferencePic2 = FirebaseStorage.getInstance().getReference("images/" + auth.getUid() + "/"+ productId + "/"+ "pic2" + "." + getFileExtension(pic2));        StorageReference storageReferencePic3 = FirebaseStorage.getInstance().getReference("images/" + auth.getUid() + "/"+ productId + "/"+ "pic3" + "." + getFileExtension(pic3));        storageReference.putFile(imageHinh).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {            @Override            public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {                storageReference.getDownloadUrl().addOnCompleteListener(new OnCompleteListener<Uri>() {                    @Override                    public void onComplete(@NonNull Task<Uri> taskhinh) {                        storageReferencePic1.putFile(pic1).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {                            @Override                            public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {                                storageReferencePic1.getDownloadUrl().addOnCompleteListener(new OnCompleteListener<Uri>() {                                    @Override                                    public void onComplete(@NonNull Task<Uri> taskpic1) {                                        storageReferencePic2.putFile(pic2).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {                                            @Override                                            public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {                                                storageReferencePic2.getDownloadUrl().addOnCompleteListener(new OnCompleteListener<Uri>() {                                                    @Override                                                    public void onComplete(@NonNull Task<Uri> taskpic2) {                                                        storageReferencePic3.putFile(pic3).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {                                                            @Override                                                            public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {                                                                storageReferencePic3.getDownloadUrl().addOnCompleteListener(new OnCompleteListener<Uri>() {                                                                    @Override                                                                    public void onComplete(@NonNull Task<Uri> taskpic3) {                                                                        DatabaseReference shopName = database.getReference("shop");                                                                        shopName.child(auth.getUid()).addValueEventListener(new ValueEventListener() {                                                                            @Override                                                                            public void onDataChange(@NonNull DataSnapshot snapshot) {                                                                                Shop shop = snapshot.getValue(Shop.class);                                                                                String shopName = shop.getName();                                                                                Boolean check_box = false;                                                                                ProductModel product = new ProductModel(productId, taskhinh.getResult().toString(), 0, ten, Integer.parseInt(gia), des, auth.getUid(), shopName, taskpic1.getResult().toString(), taskpic2.getResult().toString(), taskpic3.getResult().toString(), check_box);                                                                                assert productId != null;                                                                                root.child(productId).setValue(product, new DatabaseReference.CompletionListener() {                                                                                    @Override                                                                                    public void onComplete(@Nullable DatabaseError error, @NonNull DatabaseReference ref) {                                                                                        diaLogLoanding.HideDialog();                                                                                        Toast.makeText(ActivityQuanLySanPham.this, "Thêm thành công, đợi duyệt!", Toast.LENGTH_SHORT).show();                                                                                        startActivity(new Intent(ActivityQuanLySanPham.this, HomePageCuaHangActivity.class));                                                                                        finishAffinity();                                                                                    }                                                                                });                                                                            }                                                                            @Override                                                                            public void onCancelled(@NonNull DatabaseError error) {                                                                            }                                                                        });                                                                    }                                                                });                                                            }                                                        });                                                    }                                                });                                            }                                        });                                    }                                });                            }                        });                    }                });            }        }).addOnFailureListener(new OnFailureListener() {            @Override            public void onFailure(@NonNull Exception e) {                diaLogLoanding.HideDialog();                Toast.makeText(ActivityQuanLySanPham.this, "Up ảnh lỗi", Toast.LENGTH_SHORT).show();            }        });    }    private String getFileExtension(Uri uri) {        ContentResolver cr = getContentResolver();        MimeTypeMap mime = MimeTypeMap.getSingleton();        return mime.getExtensionFromMimeType(cr.getType(uri));    }    private void setControl() {        ivHinh = findViewById(R.id.ivThemHinhSP);        edtTen = findViewById(R.id.edtThemTenSP);        edtGia = findViewById(R.id.edtThemGiaSP);        edtDes = findViewById(R.id.edtThemChiTietSP);        btnThem = findViewById(R.id.btnThemSP);        ivPic1 = findViewById(R.id.ivThemHinh1);        ivPic2 = findViewById(R.id.ivThemHinh2);        ivPic3 = findViewById(R.id.ivThemHinh3);        spiner = findViewById(R.id.spn_chondanhmuc);    }}